{"version":3,"sources":["webpack:///./src/components/title.js","webpack:///./src/components/gallery.js","webpack:///./src/pages/event-gallery.js"],"names":["Text","styled","div","theme","mobile","Subtext","p","Separator","teal","Title","props","text","subtext","defaultProps","GridContainer","tablet","Box","Overlay","Caption","Gallery","a2","images","allFile","edges","map","edge","fluid","node","childImageSharp","key","id","alt","name","item","overlayedImages","x","i","SubText","EventGalleryPage","isFilled","title"],"mappings":"4qCAMA,IAAMA,EAAOC,IAAOC,IAAV,IAOeC,IAAMC,QAKzBC,EAAUJ,IAAOK,EAAV,KAIPC,EAAYN,IAAOC,IAAV,IAMgCC,IAAMK,KAOLL,IAAMK,KAI7BL,IAAMC,QAQzBK,EAAQ,SAACC,GACX,OACI,kBAACV,EAAD,KACI,kBAACO,EAAD,KAAYG,EAAMC,MAClB,kBAACN,EAAD,KAAUK,EAAME,WAK5BH,EAAMI,aAAe,CACjBD,QAAS,IAGEH,O,uk9FCrDf,IAAMK,EAAgBb,IAAOC,IAAV,IAKMC,IAAMY,OAKNZ,IAAMC,QAMzBY,EAAMf,IAAOC,IAAV,KAIHe,EAAUhB,IAAOC,IAAV,IAWKC,IAAMK,MAMjBU,EAAUjB,IAAOC,IAAV,KAyECiB,EAnEC,WAEZ,IAkDeC,EAfTC,EApBI,OAoBUC,QAAQC,MAAMC,KAAI,SAACC,GAAD,OAClC,kBAAC,IAAD,CACIC,MAAOD,EAAKE,KAAKC,gBAAgBF,MACjCG,IAAKJ,EAAKE,KAAKG,GACfC,IAAKN,EAAKE,KAAKK,UAIjBrB,EA3CY,CACd,iCACA,iCACA,gHACA,8FACA,2FACA,4EACA,kFACA,kFACA,oEACA,gEACA,+CAgCmBa,KAAI,SAACS,GAAD,OACvB,kBAAChB,EAAD,KACI,kBAACC,EAAD,KAAUe,OAOZC,GAFSd,EACkBT,EAARU,EADAG,KAAI,SAACW,EAAGC,GAAJ,MAAU,CAACD,EAAGf,EAAGgB,QAETZ,KAAK,SAACS,GAAD,OACtC,kBAACjB,EAAD,KACKiB,MAIT,OACG,kBAACnB,EAAD,KACUoB,I,sRCtGjB,IAAMG,EAAUpC,IAAOK,EAAV,IAKUH,IAAMY,QAeduB,UAXU,kBACvB,kBAAC,IAAD,CAAQC,UAAU,GAChB,kBAAC,IAAD,CAAKC,MAAM,kBAEX,kBAAC,IAAD,CAAO7B,KAAK,kBACZ,kBAAC0B,EAAD,qCACA,kBAAC,EAAD","file":"component---src-pages-event-gallery-js-31e538f715ba03d70ea1.js","sourcesContent":["import React, {useState} from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport { theme , GlobalStyles} from \"../theme/GlobalStyles\"\n\nconst Text = styled.div`\n    padding-top: 3rem;\n    padding-bottom: 1.5rem;\n    font-size: 4rem;\n    width: 85%;\n    margin: auto;\n    font-family: \"Montserrat Light\";\n    @media (max-width: ${theme.mobile}) {\n        font-size: 2.2rem;\n        padding: 2rem 0rem 0rem 0rem;\n    }\n`\nconst Subtext = styled.p`\n    padding-top: 0.5rem;\n    font-size: 1.5rem;\n`\nconst Separator = styled.div`\n    display: flex;\n    align-items: center;\n    &::before {\n        content: \"\";\n        flex: 0.1;\n        background: linear-gradient(to left, ${theme.teal}, transparent);\n        height: 0.1rem;\n        margin-right: .2rem\n    }\n    &::after {\n        content: \"\";\n        flex: 1;\n        background: linear-gradient(to right, ${theme.teal}, transparent);\n        height: 0.1rem;\n        margin-left: .2rem;\n    }\n    @media (max-width: ${theme.mobile}) {\n        &::before {\n            flex: 1;\n        }\n    }\n`\n\n\nconst Title = (props) => {\n    return (\n        <Text>\n            <Separator>{props.text}</Separator>\n            <Subtext>{props.subtext}</Subtext>\n        </Text>\n    )\n}\n\nTitle.defaultProps = {\n    subtext: \"\",\n}\n\nexport default Title\n\n\n\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { theme } from \"../theme/GlobalStyles\"\n\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nconst GridContainer = styled.div`\n    display: grid;\n    grid-template-columns: auto auto auto;\n    grid-gap: 1.5rem 1.5rem;\n    padding: 2rem 4rem;\n    @media (max-width: ${theme.tablet}) {\n        grid-template-columns: auto auto;\n        grid-gap: 1.5rem 1.5rem;\n        padding: 0rem 1rem;\n    }\n    @media (max-width: ${theme.mobile}) {\n        grid-template-columns: auto;\n        grid-gap: 1.5rem 1.5rem;\n        padding: 0rem 1rem;\n    }\n`\nconst Box = styled.div`\n    position: relative;\n    display: block;\n`\nconst Overlay = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    bottom: 0;\n    text-align: center;\n    opacity: 0;\n    \n    background: ${theme.teal};\n    -webkit-transition: opacity 0.25s ease;\n    &:hover  {\n        opacity: 0.95;\n    }\n `\n const Caption = styled.div`\n    color: #fff;\n    font-family: \"Montserrat Regular\";\n    padding: 2rem 2rem;\n `\n\nconst Gallery = () => {\n    // text to be displayed in same order as images (most recent first)\n    const textItems = [\n        \"Eden performs at Wigmore Hall.\",\n        \"Eden performs at Wigmore Hall.\",\n        \"Eden performs for schoolchildren as a part of the First Leeds International Piano Festival in Leeds, England.\",\n        \"Eden and Kiana Lede rehearse for the Grammy's Salute to Classical Concert in Carnegie Hall.\",\n        \"Eden and Ledisi take a bow at the Grammy's Salute to Classical Concert in Carnegie Hall.\",\n        \"Eden and Lang Lang take a bow at the City of Shenzhen's Expo in New York.\",\n        \"Eden and Lang Lang perform together at the City of Shenzhen's Expo in New York.\",\n        \"Eden and Lang Lang perform together at the City of Shenzhen's Expo in New York.\",\n        \"Eden introduces himself to an audience at the Pritzker Pavillion.\",\n        \"Eden and Lang Lang recording in James Newton Howard's studio.\",\n        \"Eden and Lang Lang at JBLFest in Las Vegas.\",\n    ]\n\n    // image query displayed in order of most recent birth first. add images chronologically\n    const data = useStaticQuery(graphql`\n        query GalleryQuery {\n            allFile(filter: {relativeDirectory: {eq: \"gallery\"}}, sort: {order: ASC, fields: birthtime}) {\n                edges {\n                    node {\n                        id\n                        name\n                        childImageSharp {\n                            id\n                            fluid(maxWidth: 600) {\n                                ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    `)\n\n    // take query data and map into Img components\n    const images = data.allFile.edges.map((edge) => (\n        <Img\n            fluid={edge.node.childImageSharp.fluid}\n            key={edge.node.id}\n            alt={edge.node.name}\n        />\n    ));\n\n    const text = textItems.map((item) => (\n        <Overlay>\n            <Caption>{item}</Caption>\n        </Overlay>\n    ));\n    \n    // combine images and text arrays into one and map into <Box/>\n    let zip = (a1, a2) => a1.map((x, i) => [x, a2[i]]); \n    const imageAndText = zip(images, text);\n    const overlayedImages = imageAndText.map( (item) => (\n        <Box>\n            {item}\n        </Box>\n    ));\n\n    return (\n       <GridContainer>\n                {overlayedImages}     \n       </GridContainer>\n    )\n}\n\nexport default Gallery","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { theme } from \"../theme/GlobalStyles\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Title from \"../components/title\"\nimport Gallery from \"../components/gallery\"\n\nconst SubText = styled.p`\n  font-family: \"Montserrat Light Italic\";\n  display: flex;\n  justify-content: center;\n  margin-bottom: 0.5rem;\n  @media (min-width: ${theme.tablet}) {\n    display: none;\n  }\n`\nconst EventGalleryPage = () => (\n  <Layout isFilled={true}>\n    <SEO title=\"Event Gallery\" />\n    \n    <Title text=\"EVENT GALLERY\" />\n    <SubText>Click image to view caption.</SubText>\n    <Gallery />\n    \n  </Layout>\n)\n\nexport default EventGalleryPage\n"],"sourceRoot":""}